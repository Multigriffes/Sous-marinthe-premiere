Documentation :

Partie 1 - Génération :

Modification de la gestion de la sauvegarde de la grille :

    utilisation d'un identifiant unique en string binaire pour chaque case

    ([("string binaire"),("exemple"),("0101")],
    [("0000"),("0000"),("0000")],
    [("0000"),("0000"),("0000")])

    on parcours ensuite la str, si c'est 0 pas de mur si c'est 1 on met un mur

    "0,0,0,0" correspond à "gauche,droite,haut,bas"

Map test 5*5 :

([("1011"),("0110"),("1011"),("0011"),("0110")],
[("1010"),("0101"),("1110"),("1110"),("1100")],
[("1001"),("0010"),("0000"),("0001"),("0101")],
[("1010"),("0101"),("1000"),("0111"),("1110")],
[("1101"),("1011"),("0001"),("0011"),("0101")])

Fonction creation_grille_joueur :

def creation_grille_joueur(taille_grille:int=5,pos_joueur:list=[]):
    
    if pos_joueur==[]:
        pos_joueur=[randint(0,taille_grille-1),randint(0,taille_grille-1)]
    grille_joueur=[["*" for b in range(taille_grille)] for a in range(taille_grille)]
    grille_joueur[pos_joueur[0]][pos_joueur[1]]="O"

    doc :

    Si la position du joueur n'est pas donné, on le place aléatoirement avec "randint"

    Ensuite on créé la grille grâce à la "taille_grille" qui est à 5 de base
    on créé d'abord une ligne puis on dublique cette ligne pour former une grille

    On place ensuite le joueur avec son "O" par rapport a sa position (x,y) qui correspond a (0,1)
